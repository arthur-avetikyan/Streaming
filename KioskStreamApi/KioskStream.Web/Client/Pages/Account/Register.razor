@page "/account/register"

@using KioskStream.Web.Common.DataTransferObjects.Account

@attribute [AllowAnonymous]

@layout LoginLayout

@inject NavigationManager NavigationManager
@inject IAuthorizationApiAccessor AuthorizationApiAccessor
@inject IMatToaster MatToaster

<MatCard>
    <div class="hidden-mdc-down">
        <MatIconButton Icon="exit_to_app" Class="float-left" @onclick="GoLogin" />
        <MatIconButton Icon="home" Class="float-left" Link="/" />
    </div>
    <div class="logo">
        @*<img src="_content/BlazorBoilerplate.CommonUI/images/blazorboilerplate.svg" style="width:100px;" />*@<br />
        <br />
        <h4>Create Account</h4>
    </div>

    <EditForm Model="@registerParameters" OnValidSubmit="@RegisterUser">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <fieldset>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.FirstName" Label="First Name" Icon="person_pin" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.LastName" Label="Last Name" Icon="person_pin" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.UserName" Label="User Name" Icon="person" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.Email" Label="Email" Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.Password" Label="Password" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@registerParameters.PasswordConfirm" Label="Password Confirmation" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
            </div>
            <div class="form-group d-flex justify-content-end">
                <MatButton Type="submit" Raised="true">Create account</MatButton>
            </div>
            <hr />
            <NavLink href="account/login">
                <h6 class="font-weight-normal text-center">Already have an account? Click here to login</h6>
            </NavLink>
        </fieldset>
    </EditForm>
</MatCard>

@code {
    RegisterParameters registerParameters { get; set; } = new RegisterParameters();

    async Task RegisterUser()
    {
        try
        {
            var response = await AuthorizationApiAccessor.Register(registerParameters);
            if (response.IsSuccessStatusCode)
            {
                MatToaster.Add("New User Email Verification was sent to: " + registerParameters.Email, MatToastType.Success, "User Creation Sucessful");
                NavigationManager.NavigateTo("");
            }
            else
            {
                MatToaster.Add(response.Message, MatToastType.Danger, "User Creation Failed");
            }
        }
        catch (Exception ex)
        {
            MatToaster.Add(ex.Message, MatToastType.Danger, "User Creation Failed");
        }
    }

    private void GoLogin()
    {
        NavigationManager.NavigateTo("/account/login");
    }
}
